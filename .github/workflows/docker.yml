name: Build and Publish Docker Image

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      version:
        description: "Image version (optional override)"
        required: false
        default: "latest"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (for cross-platform)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}   # or use GHCR_PAT if needed

      - name: Set image variables
        id: vars
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/mcp-proxy
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
          elif [[ "$GITHUB_REF" == refs/heads/master ]]; then
            VERSION="master"
          else
            VERSION="${{ github.event.inputs.version }}"
            if [ -z "$VERSION" ]; then VERSION="latest"; fi
          fi
          echo "IMAGE=$IMAGE" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build & push (multi-arch)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.vars.outputs.IMAGE }}:${{ steps.vars.outputs.VERSION }}
            ${{ steps.vars.outputs.IMAGE }}:latest
